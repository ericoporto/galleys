// new module script

CharacterDirection GetDirection (this Character*)
{
  CharacterDirection dir;
  switch(this.Loop) {
    case 0: //down
      dir = eDirectionDown;
      break;
    case 1: //left
      dir = eDirectionLeft;
      break;
    case 2: //right
      dir = eDirectionRight;
      break;
    case 3: //up
      dir = eDirectionUp;
      break;
  }
  return dir;
}

void SetDirection(this Character*, CharacterDirection dir)
{
  int loop;
  switch(dir) {
    case eDirectionDown: //down
      loop = 0;
      break;
    case eDirectionLeft: //left
      loop = 1;
      break;
    case eDirectionRight: //right
      loop = 2;
      break;
    case eDirectionUp: //up
      loop = 3;
      break;
  }
  this.Loop = loop;
}

void Teleport(int map_id, int x, int y)
{
  player.ChangeRoom(map_id, x, y);
}

void _update_room(int room_id)
{ 
  player.x = MASK_FACTOR * (player.x / MASK_FACTOR);
  player.y = MASK_FACTOR * (player.y / MASK_FACTOR);
  CurrentMap.ID = room_id;
}

void on_event(EventType event, int data)
{
  if(event == eEventEnterRoomBeforeFadein)
  {
    _update_room(data);
  }
}

void game_start()
{
  _update_room(player.Room);
}
